USE RND_DB;

/* Country-wise Output Statistics */
SELECT DISTINCT A.COUNTRY, COALESCE(A.ORIGINAL_COUNT,0) ORIGINAL_COUNT, COALESCE(B.INPUT_TO_ALGORITHM,0) INPUT_TO_ALGORITHM, 
TRY_CAST(COALESCE(A.ORIGINAL_COUNT,0) - COALESCE(B.INPUT_TO_ALGORITHM,0) AS FLOAT) / (TRY_CAST(COALESCE(A.ORIGINAL_COUNT,0) AS FLOAT))*100.0 [DATA_FILTERED_%],
COALESCE(C.MASTERS_IDENTIFIED,0) MASTERS_IDENTIFIED,
CASE WHEN COALESCE(B.INPUT_TO_ALGORITHM,0)=0 THEN 0
ELSE 100.0-TRY_CAST(COALESCE(C.MASTERS_IDENTIFIED,0) AS FLOAT) / TRY_CAST(COALESCE(B.INPUT_TO_ALGORITHM,1) AS FLOAT) *100.0 END AS [DATA_COMPRESSION_%],
CASE WHEN COALESCE(B.INPUT_TO_ALGORITHM,0)!=0 AND (100.0-TRY_CAST(COALESCE(C.MASTERS_IDENTIFIED,0) AS FLOAT) / TRY_CAST(COALESCE(B.INPUT_TO_ALGORITHM,1) AS FLOAT) *100.0 )>=50.0 THEN 'HIGH PERCENTAGE OF INPUT RECORDS WERE DUPLICATES'
WHEN COALESCE(B.INPUT_TO_ALGORITHM,0)!=0 AND (100.0-TRY_CAST(COALESCE(C.MASTERS_IDENTIFIED,0) AS FLOAT) / TRY_CAST(COALESCE(B.INPUT_TO_ALGORITHM,1) AS FLOAT) *100.0 )<50.0 THEN 'ONLY FEW INPUT RECORDS WERE DUPLICATES' 
ELSE 'NO INPUT GIVEN' END AS COMMENT

FROM (
	SELECT COUNTRY, COUNT(*) ORIGINAL_COUNT 
	FROM RND_MART.DM_SITE_INFORMATION
	GROUP BY COUNTRY
	) A
LEFT JOIN (
	SELECT COUNTRY, COUNT(*) INPUT_TO_ALGORITHM 
	FROM (
		SELECT DM_SITE_INFORMATION.SITE_INFO_ID AS SITE_INFO_ID,DM_SITE_INFORMATION.SOURCE_IDENTIFIER,REPLACE(DM_SITE_INFORMATION.DATA_SOURCE_NAME,'"','') AS DATA_SOURCE_NAME,REPLACE(DM_SITE_INFORMATION.PROTOCOL_NUMBER,'"','') AS PROTOCOL_NUMBER,
		REPLACE(DM_SITE_INFORMATION.SITE_NUMBER,'"','') AS SITE_NUM,REPLACE(DM_SITE_INFORMATION.UNIQUE_SITE_ID,'"','') AS UNIQUE_SITE_ID,REPLACE(DM_SITE_INFORMATION.COUNTRY,'"','') AS C_COUNTRY,
		COUNTRY,
		REPLACE(DM_SITE_INFORMATION.SITE_NAME,'"','') AS SITE_NAME,REPLACE(DM_SITE_INFORMATION.SITE_STATE,'"','') AS STATE,REPLACE(DM_SITE_INFORMATION.SITE_CITY,'"','') AS CITY,REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_1,'"','') AS ADDRESS_LINE_1,
		REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_2,'"','') AS ADDRESS_LINE_2,REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_3,'"','') AS ADDRESS_LINE_3,REPLACE(DM_SITE_INFORMATION.SITE_ZIP_CODE,'"','') AS POSTAL_CODE,REPLACE(DM_SITE_INFORMATION.SITE_STATUS,'"','') AS SITE_STATUS
		FROM RnD_MART.DM_SITE_INFORMATION
		WHERE COUNTRY IS NOT NULL AND SITE_NAME IS NOT NULL 
		AND (
				(SITE_STATE IS NOT NULL AND SITE_CITY IS NOT NULL AND SITE_ZIP_CODE IS NOT NULL)
				OR
				(SITE_ADDRESS_LINE_1 IS NOT NULL)
			)
		--ORDER BY COUNTRY, SITE_ZIP_CODE, SITE_NAME, SITE_STATE, SITE_CITY, ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_LINE_3
	) T
	GROUP BY COUNTRY
) B
ON A.COUNTRY=B.COUNTRY
LEFT JOIN (
	SELECT REPLACE(COUNTRY,'_',' ') COUNTRY, COUNT(*) MASTERS_IDENTIFIED
	FROM RND_MART.DM_SITE_MASTER 
	GROUP BY COUNTRY
	) C
ON A.COUNTRY=C.COUNTRY;




/* Aggregated Output Statistics */
SELECT DISTINCT 'ALL COUNTRIES' COUNTRY, COALESCE(A.ORIGINAL_COUNT,0) ORIGINAL_COUNT, COALESCE(B.INPUT_TO_ALGORITHM,0) INPUT_TO_ALGORITHM, 
TRY_CAST(COALESCE(A.ORIGINAL_COUNT,0) - COALESCE(B.INPUT_TO_ALGORITHM,0) AS FLOAT) / (TRY_CAST(COALESCE(A.ORIGINAL_COUNT,0) AS FLOAT))*100.0 [DATA_FILTERED_%],
COALESCE(C.MASTERS_IDENTIFIED,0) MASTERS_IDENTIFIED,
CASE WHEN COALESCE(B.INPUT_TO_ALGORITHM,0)=0 THEN 0
ELSE 100.0-TRY_CAST(COALESCE(C.MASTERS_IDENTIFIED,0) AS FLOAT) / TRY_CAST(COALESCE(B.INPUT_TO_ALGORITHM,1) AS FLOAT) *100.0 END AS [DATA_COMPRESSION_%],
CASE WHEN COALESCE(B.INPUT_TO_ALGORITHM,0)!=0 AND (100.0-TRY_CAST(COALESCE(C.MASTERS_IDENTIFIED,0) AS FLOAT) / TRY_CAST(COALESCE(B.INPUT_TO_ALGORITHM,1) AS FLOAT) *100.0 )>=50.0 THEN 'HIGH NUMBER OF DUPLICATES IDENTIFIED'
ELSE 'FEW DUPLICATES IDENTIFIED' END AS COMMENT

FROM ( SELECT '1' COUNTRY, COUNT(*) ORIGINAL_COUNT FROM RND_MART.DM_SITE_INFORMATION ) A
LEFT JOIN (
	SELECT '1' COUNTRY, COUNT(*) INPUT_TO_ALGORITHM 
	FROM (
		SELECT DM_SITE_INFORMATION.SITE_INFO_ID AS SITE_INFO_ID,DM_SITE_INFORMATION.SOURCE_IDENTIFIER,REPLACE(DM_SITE_INFORMATION.DATA_SOURCE_NAME,'"','') AS DATA_SOURCE_NAME,REPLACE(DM_SITE_INFORMATION.PROTOCOL_NUMBER,'"','') AS PROTOCOL_NUMBER,
		REPLACE(DM_SITE_INFORMATION.SITE_NUMBER,'"','') AS SITE_NUM,REPLACE(DM_SITE_INFORMATION.UNIQUE_SITE_ID,'"','') AS UNIQUE_SITE_ID,REPLACE(DM_SITE_INFORMATION.COUNTRY,'"','') AS C_COUNTRY,
		COUNTRY,
		REPLACE(DM_SITE_INFORMATION.SITE_NAME,'"','') AS SITE_NAME,REPLACE(DM_SITE_INFORMATION.SITE_STATE,'"','') AS STATE,REPLACE(DM_SITE_INFORMATION.SITE_CITY,'"','') AS CITY,REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_1,'"','') AS ADDRESS_LINE_1,
		REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_2,'"','') AS ADDRESS_LINE_2,REPLACE(DM_SITE_INFORMATION.SITE_ADDRESS_LINE_3,'"','') AS ADDRESS_LINE_3,REPLACE(DM_SITE_INFORMATION.SITE_ZIP_CODE,'"','') AS POSTAL_CODE,REPLACE(DM_SITE_INFORMATION.SITE_STATUS,'"','') AS SITE_STATUS
		FROM RnD_MART.DM_SITE_INFORMATION
		WHERE COUNTRY IS NOT NULL AND SITE_NAME IS NOT NULL 
		AND (
				(SITE_STATE IS NOT NULL AND SITE_CITY IS NOT NULL AND SITE_ZIP_CODE IS NOT NULL)
				OR
				(SITE_ADDRESS_LINE_1 IS NOT NULL)
			)
		--ORDER BY COUNTRY, SITE_ZIP_CODE, SITE_NAME, SITE_STATE, SITE_CITY, ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_LINE_3
	) T
) B
ON A.COUNTRY=B.COUNTRY
LEFT JOIN ( SELECT COUNT(*) MASTERS_IDENTIFIED, '1' COUNTRY	FROM RND_MART.DM_SITE_MASTER ) C
ON A.COUNTRY=C.COUNTRY;
